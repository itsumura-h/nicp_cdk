service : {
  greet: (text) -> (text) query;
  requestAndResponse: (bool, nat, int, float32, text) -> (text) query;
  argBool: (bool) -> (bool) query;
  argInt: (int) -> (int) query;
  argNat: (nat) -> (nat) query;
  argNat8: (nat8) -> (nat8) query;
  argNat16: (nat16) -> (nat16) query;
  argNat32: (nat32) -> (nat32) query;
  argNat64: (nat64) -> (nat64) query;
  argInt8: (int8) -> (int8) query;
  argInt16: (int16) -> (int16) query;
  argInt32: (int32) -> (int32) query;
  argInt64: (int64) -> (int64) query;
  argFloat: (float32) -> (float32) query;
  argFloat32: (float32) -> (float32) query;
  argFloat64: (float64) -> (float64) query;
  argText: (text) -> (text) query;
  argPrincipal: (principal) -> (principal) query;
  argBlob: (blob) -> (blob) query;
  argOpt: (opt nat8) -> (opt nat8) query;
  argVec: (vec nat16) -> (vec nat16) query;
  msgPrincipal: () -> (principal) query;
  responseBlob: () -> (blob) query;
  responseOpt: () -> (opt nat8) query;
  responseVec: () -> (vec nat16) query;
  responseEmpty: () -> () query;
  responseNull: () -> (null) query;
  responseRecord: () -> (
    record{
      name : text;
      age : int;
      "principal" : principal;
    }
  ) query;
}
