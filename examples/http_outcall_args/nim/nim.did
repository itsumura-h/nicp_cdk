type HttpHeader = record {
  name: text;
  value: text;
};

type HttpResponsePayload = record {
  status: nat;
  headers: vec HttpHeader;
  body: blob;
};

type TransformArgs = record {
  context: blob;
  response: HttpResponsePayload;
};

type HttpMethod = variant {
  get;
  post;
  put;
  delete;
  head;
  patch;
  options;
};

service : {
  "httpRequestArgs" : () -> (record {
    url: text;
    max_response_bytes: opt nat;
    headers: vec HttpHeader;
    body: opt blob;
    method: HttpMethod;
    transform: opt record {
      function: func (TransformArgs) -> (HttpResponsePayload) query;
      context: blob;
    };
    is_replicated: opt bool;
  }) query;
};
